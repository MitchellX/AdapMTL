MTSeqModel(
  (backbone): MTSeqBackbone(
    (inputNode): InputNode()
    (mtl_blocks): ModuleList(
      (0): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): PoolNode(
            (basicOp): AbstractPool(
              (pool_op): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=True)
            )
          )
        )
      )
      (1): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (2): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (3): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(64, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (4): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): Conv2dNode(
            (basicOp): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          )
          (3): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (4): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (5): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (6): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (7): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (8): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (5): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (6): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (7): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(128, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (8): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): Conv2dNode(
            (basicOp): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (3): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (4): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (5): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (6): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (7): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (8): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (9): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): Conv2dNode(
            (basicOp): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (3): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (4): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (5): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (6): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (7): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (8): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (10): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (11): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (12): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (13): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (14): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (15): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (16): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (17): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (18): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (19): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(256, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (20): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): Conv2dNode(
            (basicOp): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (3): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (4): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (5): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (6): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (7): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (8): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (21): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): Conv2dNode(
            (basicOp): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (3): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (4): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (5): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (6): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (7): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (8): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (22): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (23): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (24): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
      (25): ComputeBlock(
        (compute_nodes): ModuleList(
          (0): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (1): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (2): ReLUNode(
            (basicOp): ReLU(inplace=True)
          )
          (3): Conv2dNode(
            (basicOp): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          )
          (4): BN2dNode(
            (basicOp): BatchNorm2d(512, eps=9.999999747378752e-06, momentum=0.10000000149011612, affine=True, track_running_stats=True)
          )
          (5): EltNode(
            (basicOp): EltwiseOp(op=1)
          )
          (6): ReLUNode(
            (basicOp): ReLU()
          )
        )
      )
    )
  )
  (heads): ModuleDict(
    (segment_semantic): ASPPHeadNode(
      (fc1): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 40, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc2): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 40, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc3): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 40, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc4): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 40, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
    )
    (normal): ASPPHeadNode(
      (fc1): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 3, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc2): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 3, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc3): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 3, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc4): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 3, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
    )
    (depth_zbuffer): ASPPHeadNode(
      (fc1): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc2): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc3): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
      (fc4): Classification_Module(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24))
        (conv2): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv3): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
    )
  )
)